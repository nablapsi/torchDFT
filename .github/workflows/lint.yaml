name: Lint
on: [push, pull_request]
jobs:
  flake8:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: pip install flake8 flake8-bugbear flake8-comprehensions flake8-quotes pep8-naming
      - uses: actions/checkout@v2
      - run: flake8
  black:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: pip install black
      - uses: actions/checkout@v2
      - run: black . --check
  isort:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: pip install isort
      - uses: actions/checkout@v2
      - run: isort . --check
  pydocstyle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: pip install pydocstyle
      - uses: actions/checkout@v2
      - run: pydocstyle src
  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
        id: setup-python
      - name: Install Poetry
        run: |
          curl -sSL https://raw.githubusercontent.com/python-poetry/install.python-poetry.org/main/install-poetry.py | python -
          $HOME/.local/share/pypoetry/venv/bin/pip install -U poetry-dynamic-versioning
          echo $HOME/.local/bin >>$GITHUB_PATH
      - uses: actions/checkout@v2
      - name: Create Python virtual environment
        run: |
          python -m venv venv
          echo VIRTUAL_ENV=$PWD/venv >>$GITHUB_ENV
          echo $PWD/venv/bin >>$GITHUB_PATH
          echo venv >>.git/info/exclude
      - uses: actions/cache@v2
        with:
          path: |
            poetry.lock
            ${{ env.VIRTUAL_ENV }}/bin
            ${{ env.VIRTUAL_ENV }}/lib/python${{ matrix.python-version }}/site-packages
          key: ${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('pyproject.toml') }}
      - name: Install dependencies
        run: |
          poetry install --no-dev
          pip install mypy
      - run: mypy
